package gui;

import bike.HeartRates;
import bike.User;
import java.awt.HeadlessException;
import javax.swing.text.AbstractDocument;
import javax.swing.*;

/**
 * CMPSC 221 
 * BicycleFitnessTracker 
 * BikeApp.java 
 * Purpose: Runs the application
 * 
 * @author Mike Moye
 * @version 1.0 17 March 2014
 *
 */
public class BikeApp extends javax.swing.JFrame {

    private static StartScreen startScreen;
    private static MainMenu mainMenu;
    private static HeartRateScreen hrScreen;

    /**
     * Creates new form BikeApp
     */
    public BikeApp() {
        initComponents();
        setBikeApp();       
    }
    
    /**
     * Setup the application
     */
    private void setBikeApp(){
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/images/bike.png")).getImage());

        startScreen = new gui.StartScreen();
        mainMenu = new MainMenu();
        hrScreen = new HeartRateScreen();
        
        getContentPane().add(startScreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 410));
        getContentPane().add(mainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 410));
        getContentPane().add(hrScreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 410));
        
        mainMenu.setVisible(false);
        hrScreen.setVisible(false);
    }
    
    /**
     * Method startScreen sets the visibility if the start screen
     * @param v visibility
     * @return startScreen.isVisible() current visibility
     */
    public static boolean startScreen(boolean v){
        startScreen.setVisible(v);
        return startScreen.isVisible();
    }
    /**
     * Method mainMenu sets the visibility if the main menu
     * @param v visibility
     * @return mainMenu.isVisible() current visibility
     */
    public static boolean mainMenu(boolean v){
        mainMenu.setVisible(v);
        return  mainMenu.isVisible();
    }
    /**
     * Method hrScreen sets the visibility if the main menu
     * @param v visibility
     * @return hrScreen.isVisible() current visibility
     */
    public static boolean hrScreen(boolean v){
        hrScreen.setVisible(v);
        return hrScreen.isVisible();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/backButton.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 100, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/homeButton.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 100, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/menuButton.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
       if (mainMenu.isVisible()) {
            mainMenu.setVisible(false);
            startScreen.setVisible(true);
        }
        if (hrScreen.isVisible()) {
            hrScreen.setVisible(false);
            mainMenu.setVisible(true);
        }
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        try {
            java.net.URL imgURL = getClass().getResource("/resources/images/gear.png");

            Icon icon = new ImageIcon(imgURL);

            String[] months = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
            String[] days = new String[31];

            for (int i = 0; i < 31; i++) {
                days[i] = String.valueOf(i + 1);
            }
            JTextField fName = new JTextField(User.getFName());
            JTextField lName = new JTextField(User.getLName());
            JTextField year = new JTextField((String.valueOf(User.getBirthYear())));

            AbstractDocument doc = (AbstractDocument) year.getDocument();
            doc.setDocumentFilter(new MaximumSizeFilter(0, 4));

            JComboBox month = new JComboBox(months);
            month.setSelectedIndex(User.getBirthMonth() - 1);
            JComboBox day = new JComboBox(days);
            day.setSelectedIndex(User.getBirthDay() - 1);

            Object[] stuff = {"Enter your First Name:", fName, "Enter your Last Name:", lName, "Enter your birthdate: ", month, day, year};
            int response;
            response = JOptionPane.showConfirmDialog(this, stuff, "Settings", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, icon);

            if (response == JOptionPane.CANCEL_OPTION) {
            } else {

                HeartRates hr = new HeartRates();

                User.setBirthMonth((month.getSelectedIndex() + 1));
                User.setBirthDay((day.getSelectedIndex() + 1));
                User.setBirthYear(Integer.parseInt(year.getText()));

                int confirm = JOptionPane.showConfirmDialog(this, "Your name is: " + fName.getText() + " " + lName.getText() + "\n and your current age is: " + hr.calcAge((month.getSelectedIndex() + 1), (day.getSelectedIndex() + 1), Integer.parseInt(year.getText())) + " ?");

                if (confirm == JOptionPane.CANCEL_OPTION) {
                } else {
                    User.setFName(fName.getText());
                    User.setLName(lName.getText());
                    User.setTargetHeartRate();
                    User.setMaxHeartRate();
                    
                    HeartRateScreen.setHeartRates();
                }
            }
        } catch (HeadlessException | NumberFormatException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
            startScreen.setVisible(true);
            hrScreen.setVisible(false);
            mainMenu.setVisible(false);
    }//GEN-LAST:event_jLabel2MousePressed

    /**
     * The main method
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BikeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BikeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BikeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BikeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BikeApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
