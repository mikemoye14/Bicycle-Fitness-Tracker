package gui;

import bike.HeartRates;
import bike.User;
import java.awt.Color;
import java.awt.HeadlessException;
import javax.swing.*;
import javax.swing.text.*;

/**
 * CMPSC 221 
 * BicycleFitnessTracker 
 * StartScreen.java 
 * Purpose: creates the start screen panel
 * 
 * @author Mike Moye
 * @version 1.0 17 March 2014
 *
 */
public class StartScreen extends javax.swing.JPanel {

    private User user;

    /**
     * Creates new form StartScreenPanel
     */
    public StartScreen() {
        initComponents();
        this.user = new User();
    }
    
    /**
     * Method setUser sets user
     * @param user user
     */
    public void setUser(User user) {
        this.user = user;
    }
    
    /**
     * Method getUser gets user
     * @return this.user user
     */
    public User getUser() {
        return this.user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabel4.setText("START");
        jPanel1.add(jLabel4);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/bike.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel5.setText("SETTINGS");
        jPanel2.add(jLabel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel1)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(75, 75, 75)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        this.setVisible(false);
        BikeApp.mainMenu(true);
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        jPanel1.setBackground(new Color(0, 255, 255));
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
        jPanel1.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jPanel1MouseExited

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        try {
            java.net.URL imgURL = getClass().getResource("/resources/images/gear.png");

            Icon icon = new ImageIcon(imgURL);

            String[] months = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
            String[] days = new String[31];

            for (int i = 0; i < 31; i++) {
                days[i] = String.valueOf(i + 1);
            }
            JTextField fName = new JTextField(User.getFName());
            JTextField lName = new JTextField(User.getLName());
            JTextField year = new JTextField((String.valueOf(User.getBirthYear())));

            AbstractDocument doc = (AbstractDocument) year.getDocument();
            doc.setDocumentFilter(new MaximumSizeFilter(0, 4));

            JComboBox month = new JComboBox(months);
            month.setSelectedIndex(User.getBirthMonth() - 1);
            JComboBox day = new JComboBox(days);
            day.setSelectedIndex(User.getBirthDay() - 1);

            Object[] stuff = {"Enter your First Name:", fName, "Enter your Last Name:", lName, "Enter your birthdate: ", month, day, year};
            int response;
            response = JOptionPane.showConfirmDialog(this, stuff, "Settings", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, icon);

            if (response == JOptionPane.CANCEL_OPTION) {
            } else {

                HeartRates hr = new HeartRates();

                User.setBirthMonth((month.getSelectedIndex() + 1));
                User.setBirthDay((day.getSelectedIndex() + 1));
                User.setBirthYear(Integer.parseInt(year.getText()));

                int confirm = JOptionPane.showConfirmDialog(this, "Your name is: " + fName.getText() + " " + lName.getText() + "\n and your current age is: " + hr.calcAge((month.getSelectedIndex() + 1), (day.getSelectedIndex() + 1), Integer.parseInt(year.getText())) + " ?");

                if (confirm == JOptionPane.CANCEL_OPTION) {
                } else {
                    User.setFName(fName.getText());
                    User.setLName(lName.getText());
                    User.setTargetHeartRate();
                    User.setMaxHeartRate();
                }
            }
        } catch (HeadlessException | NumberFormatException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        jPanel2.setBackground(new Color(0, 255, 255));
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
        jPanel2.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jPanel2MouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}

class MaximumSizeFilter extends DocumentFilter {
    private final int maxRows;
    private final int maxCols;

    /**
     * Creates a new MaximumSizeFilter with a given row/column limit. This
     * Filter limits the associated JTextComponent to this number of rows and
     * columns.
     *
     * @param maxRows the maximum number of rows allowed
     * @param maxCols the maximum number of columns allowed in any line
     */
    public MaximumSizeFilter(int maxRows, int maxCols) {
        this.maxRows = maxRows;
        this.maxCols = maxCols;
    }

    /**
     *
     * @param fb
     * @param offset
     * @param str
     * @param attr
     * @throws BadLocationException
     */
    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset, String str, AttributeSet attr)
            throws BadLocationException {
        replace(fb, offset, 0, str, attr);
    }

    /**
     *
     * @param fb
     * @param offset
     * @param length
     * @param str
     * @param attrs
     * @throws BadLocationException
     */
    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String str, AttributeSet attrs)
            throws BadLocationException {
        Document doc = fb.getDocument();
        // Apply the insert/replace first, necessary corrections will be made below
        fb.replace(offset, length, str, attrs);
        // Get the root element, meaning the main text element containing the 'line' elements
        Element root = doc.getDefaultRootElement();
        // Task 1: Find lines longer than maxCols
        for (int index = 0; index < root.getElementCount(); index++) {
            Element e = root.getElement(index);
            // "End Offset" is the position AFTER the last character
            int lineLength = e.getEndOffset() - e.getStartOffset() - 1;
            if (lineLength > this.maxCols) {
                fb.remove(e.getStartOffset() + this.maxCols, lineLength - this.maxCols);
            }
        }
        // Task 2: Clip everything after the last permissible row
        if (root.getElementCount() > this.maxRows) {
            int offsetInvalidRow = root.getElement(this.maxRows).getStartOffset();
            // remove the \n of the previous row too
            fb.remove(offsetInvalidRow - 1, root.getEndOffset() - offsetInvalidRow);
        }
    }
}
